@using AppointmentsManagerBlazorApp.Components


<h3>Detail for @CallItem.Name</h3>
<EditForm Model="@CallItem"
          OnValidSubmit="@(e=> OnSave.InvokeAsync(CallItem))">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" class="form-control" @bind-Value="CallItem.Name" />
        <ValidationMessage For="@(()=> CallItem.Name)"/>
    </div>

    <div class="form-group">
        <label for="provider">Provider:</label>
        <InputText id="provider" @bind-Value="CallItem.Provider" class="form-control" />
        <ValidationMessage For="@(()=> CallItem.Provider)" />
    </div>

    <div class="form-group">
        <label for="data">Date:</label>
        <InputDate id="date" @bind-Value="CallItem.Date" class="form-control" />
    </div>

    <div class="form-group">
        <label for="description">Description:</label>
        <InputText id="description" @bind-Value="CallItem.Description" class="form-control" />
    </div>

    <div class="form-group">
        <label for="note">Note:</label>
        <InputTextArea id="note" @bind-Value="CallItem.Note" class="form-control" />
    </div>





    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-warning" @onclick="OnCancel">Cancel</button>

</EditForm>






@code
{
    [Parameter]
    public Call CallItem { get; set; }

    [Parameter]
    public EventCallback<Call> OnSave { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }
}
